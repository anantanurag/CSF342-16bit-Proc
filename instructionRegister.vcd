$date
	Mon Apr 02 00:10:33 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_instructionRegister $end
$var wire 4 ! OPCODE [3:0] $end
$var wire 4 " FUNCFIELD [3:0] $end
$var wire 4 # A_WriteRegRT_BT [3:0] $end
$var wire 2 $ A_RegSWLW [1:0] $end
$var wire 4 % A_ReadReg2RT [3:0] $end
$var wire 4 & A_ReadReg1RT [3:0] $end
$var wire 2 ' A_Offset [1:0] $end
$var reg 1 ( C_IRWrite $end
$var reg 16 ) D_MemData [15:0] $end
$var reg 1 * clk $end
$var reg 1 + rst $end
$scope module uut $end
$var wire 1 ( C_IRWrite $end
$var wire 16 , D_MemData [15:0] $end
$var wire 1 * clk $end
$var wire 1 + rst $end
$var reg 2 - A_Offset [1:0] $end
$var reg 4 . A_ReadReg1RT [3:0] $end
$var reg 4 / A_ReadReg2RT [3:0] $end
$var reg 2 0 A_RegSWLW [1:0] $end
$var reg 4 1 A_WriteRegRT_BT [3:0] $end
$var reg 4 2 FUNCFIELD [3:0] $end
$var reg 4 3 OPCODE [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
1+
0*
bx )
x(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#10
b0 #
b0 1
b0 $
b0 0
b0 '
b0 -
b0 %
b0 /
b0 &
b0 .
b0 "
b0 2
b0 !
b0 3
1*
#17
0+
1(
b1000101101001000 )
b1000101101001000 ,
#20
0*
#30
b1011 #
b1011 1
b10 $
b10 0
b11 '
b11 -
b1000 %
b1000 /
b100 &
b100 .
b1000 "
b1000 2
b1000 !
b1000 3
1*
#34
0(
#40
0*
#50
1*
#51
1+
#60
0*
#68
1(
#70
b0 #
b0 1
b0 $
b0 0
b0 '
b0 -
b0 %
b0 /
b0 &
b0 .
b0 "
b0 2
b0 !
b0 3
1*
#80
0*
#85
0+
b10101111001001 )
b10101111001001 ,
#90
b1011 #
b1011 1
b10 $
b10 0
b11 '
b11 -
b1001 %
b1001 /
b1100 &
b1100 .
b1001 "
b1001 2
b10 !
b10 3
1*
#100
0*
#102
